name: Simple CI/CD with Retraining
on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      retrain:
        description: 'Retrain model?'
        type: boolean
        default: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest
      
      - name: Run tests
        run: pytest tests/ || echo "No tests found"
      
      - name: Setup DVC
        uses: iterative/setup-dvc@v1
      
      - name: Pull data and model
        env:
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
        run: |
          # Add remote if it doesn't exist
          dvc remote add origin https://dagshub.com/kraj2003/Sales_store.dvc || true
          dvc remote default origin
          # Configure authentication
          dvc remote modify origin --local auth basic
          dvc remote modify origin --local user kraj2003
          dvc remote modify origin --local password $DAGSHUB_TOKEN

          # Pull data
          dvc pull || echo "Nothing to pull"
      
      - name: Check if retrain needed
        id: retrain_check
        run: |
          # Simple check: retrain if manual trigger OR no model exists
          if [ "${{ github.event.inputs.retrain }}" = "true" ] || [ ! -f "models/best_model.pkl" ]; then
            echo "retrain=true" >> $GITHUB_OUTPUT
          else
            echo "retrain=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Retrain model
        if: steps.retrain_check.outputs.retrain == 'true'
        env:
          DAGSHUB_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
        run: |
          cd src
          python pipeline.py
          cd ..
          # Push updated model
          dvc add models
          dvc push models.dvc
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add models.dvc
          git commit -m "Update model [skip ci]" || echo "No changes"
          git push || echo "Nothing to push"
      
      - name: Build Docker image
        run: |
          docker build -t sales-forecasting:latest .
      
      - name: Deploy (placeholder)
        run: |
          echo "Deploying application..."
          echo "Model retrained: ${{ steps.retrain_check.outputs.retrain }}"
          # Add your actual deployment commands here
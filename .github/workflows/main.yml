name: Simple CI/CD with Retraining
on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      retrain:
        description: 'Retrain model?'
        type: boolean
        default: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest
      
      - name: Run tests
        run: pytest tests/ || echo "No tests found"
      
      - name: Setup DVC
        uses: iterative/setup-dvc@v1
      
      - name: Pull data and model
        env:
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
        run: |
          # Configure authentication for existing remote
          dvc remote modify dagshub --local auth basic
          dvc remote modify dagshub --local user kraj2003
          dvc remote modify dagshub --local password $DAGSHUB_TOKEN

          # Pull data
          dvc pull data.dvc || echo "Failed to pull data"
          dvc pull models.dvc || echo "Failed to pull models"
          
          # Debug: Check if data exists
          ls -la data/ || echo "Data directory not found"
          ls -la models/ || echo "Models directory not found"

      - name: Check if retrain needed
        id: retrain_check
        run: |
          echo "Checking retrain conditions..."
          echo "Manual retrain input: ${{ github.event.inputs.retrain }}"
          echo "Model file exists: $([ -f "models/best_model.pkl" ] && echo "yes" || echo "no")"
          
          # Simple check: retrain if manual trigger OR no model exists
          if [ "${{ github.event.inputs.retrain }}" = "true" ] || [ ! -f "models/best_model.pkl" ]; then
            echo "retrain=true" >> $GITHUB_OUTPUT
            echo "Decision: Will retrain model"
          else
            echo "retrain=false" >> $GITHUB_OUTPUT
            echo "Decision: Will skip retraining"
          fi
      
      - name: Retrain model
        if: steps.retrain_check.outputs.retrain == 'true'
        env:
          DAGSHUB_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
          MLFLOW_TRACKING_URI: https://dagshub.com/kraj2003/Store_sales.mlflow
          MLFLOW_TRACKING_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
          MLFLOW_TRACKING_PASSWORD: ${{ secrets.DAGSHUB_TOKEN }}
        run: |
          python src/pipeline.py
          # Push updated model
          dvc add models
          dvc push models.dvc
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add models.dvc
          git commit -m "Update model [skip ci]" || echo "No changes"
          git push || echo "Nothing to push"
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/myproject:latest .

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/myproject:latest
